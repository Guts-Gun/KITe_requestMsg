server:
  port: 8011
spring:
  #  redis:
  #    lettuce:
  #      pool:
  #        max-active: 10
  #        max-idle: 10
  #        min-idle: 2
  #    port: 6379
  #    host: 127.0.0.1
  #    password:
  data:
    redis:
      cluster:
        nodes:
          - redis-cluster.redis.svc.cluster.local:6379
  writedb:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://gutsandgun.kro.kr:12005/request?usessl=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: gutsandgun
    hikari:
      maximum-pool-size: 10
  readdb:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://gutsandgun.kro.kr:12002/read?usessl=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: gutsandgun
    hikari:
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: update  # option type: create, create-drop, update, validate, none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect
        storage_engine: innodb
        format_sql: true
        show-sql: true
        generate-ddl: true
    open-in-view: false
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://gutsandgun.kro.kr:10006/realms/KITe/protocol/openid-connect/certs
logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: trace  # query의 ?에 어떤 값이 들어가는지 TRACE Log에 값을 보여줌

keycloak:
  realm: KITe
  bearer-only: true
  ssl-required: external
  resource: spring_auth
  auth-server-url: https://gutsandgun.kro.kr:10006
  credentials:
    secret: 0U1wVFCEHbzhhyPzWvDkQUnVfZFht7VE


feign:
  url :
#    sending-manager: localhost:8004
    sending-manager : https://gutsandgun.kro.kr:30000